#!/usr/bin/env nix-shell
#! nix-shell -i perl -p perl -p perlPackages.MailIMAPClient -p perlPackages.IOSocketSSL
#!/usr/bin/env perl

use warnings;
use strict;
use Mail::IMAPClient;
use IO::Socket::SSL;

use POSIX qw(setsid);
setsid;

$ENV{"QUIET"} = "1";

unless (-t STDIN) {
    exec "urxvt", "-bg", "darkslategrey", "-e", $0;
}

open my $mbsync, $ENV{"HOME"} . "/.mbsyncrc" or die $!;

my $acct;
my %accts;

while (my $line = <$mbsync>) {
    next if $line =~ /^\s*#/;
    if ($line =~ /IMAPAccount (.+)/) {
        $acct = $1;
    } else {
        if ($line =~ /\s*([^\s]+)\s+?(.+)/) {
            $accts{$acct}{$1} = $2;
        }
    }
}

use Data::Dumper;

use IPC::Semaphore;
use IPC::SysV qw(IPC_PRIVATE IPC_CREAT SEM_UNDO);

my $sem = new IPC::Semaphore(IPC_PRIVATE, 1, IPC_CREAT);
$sem->setval(0, 1);

sub lock_system {
    my ($command) = @_;
    $sem->op(0, -1, SEM_UNDO);
    system("$command");
    $sem->op(0, 1, SEM_UNDO);
}

system "notmuch new";
system "stty -tostop";

my @children;
for my $server ( keys %accts ) {
    my $proc = fork;
    if ($proc) {
        push @children, $proc;
    } elsif ($proc == 0) {
      reconnect:
        until (0) {
            my $update_cmd = "mbsync $server:INBOX; NO_SYNC=1 notmuch new";

            lock_system($update_cmd);
            my $host = $accts{$server}{Host};
            my $user = $accts{$server}{User};
            my $pass = $accts{$server}{PassCmd};
            my $ssltype = $accts{$server}{SSLType};

            my $mailbox = 'INBOX';

            $pass =~ s/^"//;
            $pass =~ s/"$//;
            $pass =`$pass`;
            chomp $pass;

            print "connecting to $host:$ssltype...\n";
            my $client;
            if ($ssltype eq 'IMAPS') {
                my $socket = IO::Socket::SSL->new (PeerAddr => $host, PeerPort => 993)
                    or next reconnect;
                $client = Mail::IMAPClient->new(
                    Socket => $socket,
                    KeepAlive => 'true',
                    User => $user,
                    Password => $pass);
            } else {
                $client = Mail::IMAPClient->new(
                    Server => $host,
                    Port => 143,
                    KeepAlive => 'true',
                    Starttls => 'true',
                    User => $user,
                    Password => $pass
                    );
            }
            next reconnect unless $client;

            $client->select($mailbox) or next reconnect;
            
            until (0) {
                ## die "$host disconnected\n"
            
                next reconnect unless $client->IsConnected;
                my $unseen = 0 + $client->unseen_count;
                my $lunseen = 0 + `notmuch count 'tag:unread and tag:inbox and path:$server/**'`;
                if ($lunseen != $unseen) {
                    print "update $server, $unseen <> $lunseen\n";
                    lock_system($update_cmd);
                }

                my $tag = $client->idle() or next reconnect;
                my $msgs = $client->idle_data(300);
                next reconnect unless defined $msgs;
                if (scalar(@$msgs)) {
                    lock_system($update_cmd);
                }
                $client->done($tag);
            }
        }
        exit 0;
    }
}

wait for @children;
